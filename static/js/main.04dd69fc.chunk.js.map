{"version":3,"sources":["Components/Navbar.js","Components/Botbar.js","Components/TrendList.js","images/loading.gif","Components/TrendStats.js","Components/Results.js","Components/LandingPage.js","images/headertext.png","images/pipeline.png","Components/AboutProject.js","Components/MobileNotifiy.js","images/contact_headertext.png","Components/Contact.js","Components/Demo.js","images/aboutus_headertext.png","Components/AboutUs.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","href","Botbar","TrendList","state","trends","firstTrend","getTrends","bind","increaseTrend","decreaseTrend","url","this","props","demoMode","axios","get","then","response","setState","data","selectTrend","catch","error","console","log","trendsBlock","items","map","trend","idx","onClick","TrendsMenuBlock","slice","Component","TrendStats","wordcloudURL","sentimentURL","links","keywords","tweetCount","finishedLoading","errorWhileLoading","getStats","showLinks","createTokenTable","backendURL","encodeURIComponent","tweet_count","Object","keys","length","links_tr","key","value","tr","push","keywords_tr","counter","prevProps","content","id","src","alt","loading","height","width","Results","activeTrend","showStats","LandingPage","showResults","scrollToComponent","results","offset","align","duration","Helmet","ref","section","AboutProject","headertext","pipeline","Mobile","Contact","type","name","placeholder","rows","Demo","AboutUs","aboutus_header","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04dd69fc.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.css'\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n  return (\n    <header>\n      <div className=\"navigation\">\n        <nav>\n          <ul> \n            <Link to=\"/\"><li>Analytics</li></Link>\n            <Link to=\"/aboutproject\"><li>About The Project</li></Link>\n            <Link to=\"/aboutus\"><li>About US</li></Link>\n          </ul>\n        </nav>\n      </div>\n\n      <div className=\"names\">\n        <ul>\n          <li>Maximilian Sch√∂neberger</li>\n          <li>Jan Straub</li>\n          <li>Paavo Streibich</li>\n          <li>Robin Viellieber</li>\n        </ul>\n      </div>\n\n      <div className=\"icons\">\n        <nav>\n          <ul>\n            <Link to=\"/contact\"><li>Contact</li></Link>\n            <li><a href=\"https://github.com/JanMStraub/ITA-Twitter_Analytics/\">Github</a></li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nexport default Navbar;","import React from 'react';\nimport './Botbar.css'\nimport { Link } from 'react-router-dom';\n\nfunction Botbar() {\n    return (\n      <footer>\n        <ul>\n          <Link to=\"/imprint\"><li>Imprint</li></Link>\n          <Link to=\"/privacy\"><li>Privacy Notice</li></Link>\n          <Link to=\"/agb\"><li>AGB'S</li></Link>\n        </ul>\n        <ul className=\"demo_mode_disclaimer\">\n          <li>This site is currently in demo mode. Click <Link to=\"/demo\">here</Link> to learn more.</li>\n        </ul>\n      </footer>\n    )\n}\n\nexport default Botbar","import React, { Component } from 'react';\nimport './TrendList.css';\nimport axios from \"axios\";\n\n\nclass TrendList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            trends: [],\n            firstTrend: 0\n        };\n        this.getTrends = this.getTrends.bind(this);\n        this.increaseTrend = this.increaseTrend.bind(this);\n        this.decreaseTrend = this.decreaseTrend.bind(this);\n    }\n\n\n    async getTrends() {\n\n        var url = \"https://dry-sierra-67161.herokuapp.com/trend_list\"\n        if (this.props.demoMode) {\n            url += \"?demo=True\"\n        }\n\n        axios.get(url)\n            .then(response => {\n                this.setState({ trends: response.data })\n                this.props.selectTrend(this.state.trends[0], 1)\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    componentDidMount() {\n\n        this.getTrends()\n    }\n\n    increaseTrend() {\n        if (this.state.firstTrend < 45) {\n            this.setState({firstTrend: this.state.firstTrend + 5})\n        }\n    }\n\n    decreaseTrend() {\n        if (this.state.firstTrend >= 5) {\n            this.setState({firstTrend: this.state.firstTrend - 5})\n        }\n    }\n\n\n    render() {\n\n        const TrendsMenuBlock = (trends, firstTrend) => {\n\n            const items = trends.map((trend, idx) => {\n                return <div>\n                    \n                    <p className=\"trendNumber\">{firstTrend + idx + 1}</p>\n                    <li onClick={() => {\n                    this.props.selectTrend(trend, firstTrend + idx + 1)\n                    }} key={idx}>{trend}</li>\n        \n                </div>;\n            });\n        \n            return (\n                <div className=\"trendmenublock\">\n                    <ul>{items}</ul>\n                </div>\n            )\n        }\n\n        const trendsBlock = TrendsMenuBlock(this.state.trends.slice(this.state.firstTrend, this.state.firstTrend + 5), this.state.firstTrend)\n\n        return (\n            <div className=\"TrendList\">\n                <h2>Trends</h2>\n                <h6>Quick Access</h6>\n                <p className=\"tweet_count\">Start here by Selecting a Trend</p>\n                <div className=\"menu-bar\">\n                    <button className=\"left_button\" onClick={this.decreaseTrend}> </button>\n                    {trendsBlock}\n                    <button className=\"right_button\" onClick={this.increaseTrend}> </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TrendList;","export default __webpack_public_path__ + \"static/media/loading.df1e3eaf.gif\";","import React, { Component } from 'react';\nimport './TrendStats.css'\nimport axios from \"axios\";\nimport loading from '../images/loading.gif'\n\n\nclass TrendStats extends Component {\n    constructor() {\n        super()\n        this.state = {\n            wordcloudURL: \"\",\n            sentimentURL: \"\",\n            links: {},\n            keywords: {},\n            tweetCount: 0,\n            finishedLoading: false,\n            errorWhileLoading: false,\n        };\n        this.getStats = this.getStats.bind(this);\n        this.showLinks = this.showLinks.bind(this);\n        this.createTokenTable = this.createTokenTable.bind(this);\n    }\n\n\n    async getStats(trend) {\n\n        var backendURL = \"https://dry-sierra-67161.herokuapp.com/analyze_trend?trend=\" + encodeURIComponent(trend)\n        if (this.props.demoMode) {\n            backendURL = \"https://dry-sierra-67161.herokuapp.com/\" + encodeURIComponent(trend) + \".json\"\n        }\n\n        axios.get(backendURL)\n            .then(response => {\n                this.setState({ links: response.data.links });\n                this.setState({ keywords: response.data.keywords });\n                this.setState({ wordcloudURL: \"https://dry-sierra-67161.herokuapp.com/\" + encodeURIComponent(trend) + \"_wordcloud.png\" });\n                this.setState({ sentimentURL: \"https://dry-sierra-67161.herokuapp.com/\" + encodeURIComponent(trend) + \"_sentiment_pie_chart_gervader.png\" });\n                this.setState({ tweetCount: response.data.tweet_count });\n                this.setState({ finishedLoading: true })\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({ errorWhileLoading: true });\n            });\n    }\n\n    showLinks() {\n        if (Object.keys(this.state.links).length === 0) {\n            return \"LINKS\"\n        } else {\n            var links_tr = []\n            for (var key in this.state.links) {\n                var value = this.state.links[key]\n                var tr = <tr><td>{value}</td><td><a href={key}>{key}</a></td></tr>;\n                links_tr.push(tr)\n            }\n            return links_tr\n        }\n    }\n\n\n    createTokenTable() {\n        if (Object.keys(this.state.keywords).length === 0) {\n            return \"KEYWORDS\"\n        } else {\n            var keywords_tr = []\n            var counter = 1\n            for (var key in this.state.keywords) {\n                var value = this.state.keywords[key];\n                var tr = <tr><td>{counter}</td><td>{key} <p>({value})</p></td></tr>;\n                counter += 1;\n                keywords_tr.push(tr)\n            }\n            return keywords_tr\n        }\n\n    }\n\n    componentDidMount() {\n        if (this.props.trend) {\n            this.getStats(this.props.trend)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.trend) {\n            if (this.props.trend !== prevProps.trend) {\n                this.setState({errorWhileLoading : false})\n                this.getStats(this.props.trend)\n                this.setState({finishedLoading : false})\n            }\n        }\n    }\n\n    render() {\n\n        var content;\n        if (this.state.finishedLoading) {\n            content =\n                <div>\n                    <h6>{this.props.id}.  {this.props.trend}</h6>\n                    <p className=\"tweet_count\">based on {this.state.tweetCount} tweets</p>\n                    <div className=\"first_row\">\n                        <div className=\"topic_words_wrapper\">\n                            <h3>Topic Words</h3>\n                            <table>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Top Words <p> (Score)</p></th>\n                                </tr>\n                                {this.createTokenTable()}\n                            </table>\n                        </div>\n                        <div className=\"wordcloud_wrapper\">\n                            <h3>Wordcloud</h3>\n                            <img className=\"wordcloud\" src={this.state.wordcloudURL} alt=\"\" />\n                        </div>\n                    </div>\n                    <div className=\"second_row\">\n                        <div className=\"sentiment_wrapper\">\n                            <h3>Trend Sentiment</h3>\n                            <img className=\"sentiment\" src={this.state.sentimentURL} alt=\"\" />\n                        </div>\n                        <div className=\"categories_links_wrapper\">\n                            <div className=\"links_wrapper\">\n                                <h3>Top Links</h3>\n                                <table>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Top Links</th>\n                                    </tr>\n                                    {this.showLinks()}\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        } else {\n            content = <div className=\"loading\"><img src={loading} alt=\"\" height=\"40\" width=\"40\" /></div>\n        }\n\n        if (this.state.errorWhileLoading) {\n            content = <h3>Error while loading data from backend!</h3>\n        }\n\n        return (\n            <div className=\"TrendStats\">\n                {content}\n            </div>\n        )\n    }\n}\n\nexport default TrendStats;","import React, { Component } from 'react';\nimport TrendList from './TrendList';\nimport TrendStats from './TrendStats';\nimport './Results.css'\n\nclass Results extends Component {\n    constructor() {\n        super()\n        this.state = {\n            activeTrend: \"\",\n            showStats: false,\n            demoMode: true,\n            id: 0\n        };\n\n        this.selectTrend = this.selectTrend.bind(this);\n    }\n\n    selectTrend = (trend, id) => {\n        this.setState({activeTrend : trend})\n        this.setState({showStats : true})\n        this.setState({id: id})\n    }\n\n    render() {\n\n        console.log(this.state.activeTrend)\n\n        return (\n            <div className=\"results\">\n                <TrendList selectTrend={this.selectTrend} demoMode={this.state.demoMode}/>\n                {this.state.showStats && <TrendStats trend={this.state.activeTrend} id={this.state.id}demoMode={this.state.demoMode}/>}\n            </div>\n        )\n    }\n}\n\nexport default Results;","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet'\nimport scrollToComponent from 'react-scroll-to-component';\nimport Navbar from './Navbar';\nimport Botbar from './Botbar';\nimport Results from './Results';\nimport './LandingPage.css'\n\nconst TITLE = \"Twitter Trend Analytics\"\n\nclass LandingPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showResults: false\n    };\n\n    this.showResults = this.showResults.bind(this);\n  }\n\n  showResults() {\n    scrollToComponent(this.results, {offset: 0, align: 'top', duration: 1500})\n  }\n\n  render() {\n    return (  \n      <div className=\"wrapper\">\n        <Helmet><title>{ TITLE }</title></Helmet>\n        <div className=\"hero_wrapper\">\n          <Navbar />\n            <h1>Consumer-Based Decision Aid Of The Top 50 German Twitter Trends</h1>\n            <button onClick={this.showResults}></button>\n        </div>\n        <section ref={(section) => {this.results = section;}}>\n          <Results />\n        </section>\n        <Botbar />\n      </div>\n    )\n  }\n}\n\nexport default LandingPage;","export default __webpack_public_path__ + \"static/media/headertext.df3e7990.png\";","export default __webpack_public_path__ + \"static/media/pipeline.e26b223e.png\";","import React from 'react';\nimport { Helmet } from 'react-helmet'\nimport Navbar from './Navbar';\nimport Botbar from './Botbar';\nimport './AboutProject.css'\nimport headertext from '../images/headertext.png'\nimport pipeline from '../images/pipeline.png'\n\nconst TITLE = \"About the Project\"\n\nfunction AboutProject() {\n    return (\n        <div className=\"aboutproject\">\n            <Helmet><title>{TITLE}</title></Helmet>\n            <div className=\"hero_wrapper_about\">\n                <Navbar />\n                <div className=\"project\">\n                    <img className=\"heading\" src={headertext} alt=\"Our Project\" />\n                    <p>Twitter trends are increasingly becoming people‚Äôs first choice when they want to inform themselves about whats happening in the world. Millions of messages are appearing every day about people‚Äôs lives, opinions on a variety of topics and latest discussions.</p>\n                </div>\n                <div className=\"ap_motivation\">\n                    <h4>Our Motivation</h4>\n                    <p>Even for twitter users that spend multiple hours per day on twitter, it can be hard to get a solid overview and background information about the latest twitter trends. This can be considered as a big data challenge, and it is difficult and time consuming for users to go through enough tweets for every trend to be able to make a good decision which trend is of relevance. In this research, we developed a model that provides decision guidance in terms of the relevance\n                    of the twitter top 50 trend using textual features. The results of this project can help twitter\n                    users to get faster to the trends they are appealed to most, and to get a first insight to all trends and\ntheir resonance in the community at a glance.</p>\n                </div>\n                <div className=\"ap_topic_words\">\n                    <h4>Feature: Topic Words</h4>\n                    <p>To get a quick overview about the different themes in a trend, the Topic Words feature uses topic extraction to show you what words are most commonly used in that specific tweet. This feature helps you to stay up to date with all the discussion happening around a topic.</p>\n                </div>\n                <div className=\"ap_wordcloud\">\n                    <h4>Feature: Wordcloud</h4>\n                    <p>In a world of colourful pictures a visualisation of the data is not allowed to be missing. This feature shows you the most used words by creating a word cloud out of them.</p>\n                </div>\n\n                <div className=\"ap_sentiment\">\n                    <h4>Feature: Trend Sentiment</h4>\n                    <p>Our Sentiment Analysis provides a quick overview of what emotions are subjectively perceived about a trend in percentages via a pie chart. It is based on a ruled-based system that operates on a predefined lexicon.</p>\n                </div>\n\n                <div className=\"ap_top_links\">\n                    <h4>Feature: Top Links</h4>\n                    <p>This feature extracts the most called links of a specific trend and lists them, providing a useful summary for further research.</p>\n                </div>\n\n                <div className=\"pipeline\">\n\n                    <h4>Feature: Pipeline</h4>\n                    <div className=\"pipeline_content\">\n                        <div className=\"pipeline_content_top\">\n                            <img className=\"pipeline_graph\" src={pipeline} alt=\"Visualization of Pipeline\" />\n                            <div>\n                                <p>The pipeline processes the data in the following steps:</p>\n                                <p>1. The get_links_from_tweet function searches for all links in a tweet and counts them in a dict.</p>\n                                <p>2. The remove_numbers_and_links function deletes all numbers, links and removes underscores, because we encountered a problem where they are present in the word cloud.</p>\n                            </div>\n                        </div>\n                        <p>3. In the function clean_tweets all non-alphabetic characters are removed and all is set in lower case.</p>\n                        <p>4. Here it removes all stop words. We added a additional stop words, because twitter users use specific twitter abbreviations that do not offer any value for us.</p>\n                        <p>5. After removing the stop words some tokens where left with one char or even empty, so it removes them in this step.</p>\n                        <p>6. In this step it removes the empty lists that remained after the removal of one char and empty tokens.</p>\n                        <p>7. Finally it adds all words in a dict and counts them.</p>\n                    </div>\n                </div>\n            </div>\n            <Botbar />\n        </div>\n    );\n}\n\nexport default AboutProject;","import React from 'react';\nimport './MobileNotify.css' \n\nfunction Mobile() {\n    return (\n        <div className=\"mobile\">\n            <h3>Site is currently not available on mobile</h3>\n        </div>\n    )\n}\n\nexport default Mobile;","export default __webpack_public_path__ + \"static/media/contact_headertext.0dc1546d.png\";","import React from 'react';\nimport { Helmet } from 'react-helmet'\nimport Navbar from './Navbar';\nimport Botbar from './Botbar';\nimport './Contact.css'\nimport headertext from '../images/contact_headertext.png';\n\nconst TITLE = \"Contact\"\n\nfunction Contact() {\n    return (\n        <div className=\"contact\">\n            <Helmet><title>{TITLE}</title></Helmet>\n            <div className=\"hero_wrapper_contact\">\n                <Navbar />\n                <img className=\"heading\" src={headertext} alt=\"Contact Us\" />\n                <form>\n                    <div className=\"input\">\n                        <h5>Name</h5>\n                        <input type=\"text\" name=\"\" placeholder=\"Your Name...\" />\n                    </div>\n                    <div className=\"input\">\n                        <h5>email</h5>\n                        <input type=\"text\" name=\"\" placeholder=\"Your Email...\" />\n                    </div>\n                    <div className=\"input\">\n                        <h5>message</h5>\n                        <div className=\"message_spacing\">\n                            <textarea className=\"input_message\" rows=\"5\" name=\"\" placeholder=\"Your message...\" />\n                        </div>\n                    </div>\n                    <div className=\"submit_placing\">\n                        <input className=\"submit_contact\" type=\"submit\" value=\"Submit\" />\n                    </div>\n                </form>\n\n            </div>\n            <Botbar />\n        </div>\n    );\n}\n\nexport default Contact;","import React from 'react';\nimport { Helmet } from 'react-helmet'\nimport Navbar from './Navbar';\nimport Botbar from './Botbar';\nimport './Demo.css'\n\nconst TITLE = \"Demo mode\"\n\nfunction Demo() {\n    return (\n        <div className=\"demo\">\n            <Helmet><title>{TITLE}</title></Helmet>\n            <div className=\"hero_wrapper_demo\">\n                <Navbar />\n                <div className=\"demo_text\">\n                    <p>We run the site in demo mode, because our twitter API has a limit on how many tweets we can scrape. If our site would function normally every visit would trigger a new scrape of the most recent trends, which would download thousands of tweets per trend. That means that in a short amount of time we would reach out limit, set by Twitter. \nTherefore we decided, that we would scrape trends when something interesting is happening and use this data to feed our algorithm. </p>\n                </div>\n            </div>\n            <Botbar />\n        </div>\n    );\n}\n\nexport default Demo;","export default __webpack_public_path__ + \"static/media/aboutus_headertext.0777aa43.png\";","import React from 'react';\nimport { Helmet } from 'react-helmet'\nimport Navbar from './Navbar';\nimport Botbar from './Botbar';\nimport './AboutUs.css'\nimport aboutus_header from '../images/aboutus_headertext.png'\n\nconst TITLE = \"About Us\"\n\nfunction AboutUs() {\n    return (\n        <div className=\"about_us\">\n            <Helmet><title>{TITLE}</title></Helmet>\n            <div className=\"hero_wrapper_about_us\">\n                <Navbar />\n                <img className=\"heading_aboutus\" src={aboutus_header} alt=\"About Us\" />\n\n                <div className=\"one_of_us\">\n                    <h4>Maximilian Sch√∂neberger</h4>\n                    <div className=\"au_item\">\n                        <p>Course of Study:</p>\n                        <p>Computer Science, B.Sc. 100%</p>\n                    </div>\n                    <div className=\"au_item\">\n                        <p>Interests:</p>\n                        <p>Medical Informatics, Algorithm & Datastructures, UI Implementation</p>\n                    </div>\n                    <div className=\"au_item\">\n                        <p>Contributions:</p>\n                        <p>Backend-Coordination, Twitter-Scraper, Pipeline assisted, Website UI & API coded</p>\n                    </div>\n                </div>\n\n                <div className=\"one_of_us\">\n                    <h4>Jan Straub</h4>\n                    <div className=\"au_item\">\n                        <p>Course of Study:</p>\n                        <p>Computer Science, B.Sc. 100%</p>\n                    </div>\n                    <div className=\"au_item\">\n                        <p>Interests:</p>\n                        <p>Computer Graphics</p>\n                    </div>\n                    <div className=\"au_item\">\n                        <p>Contributions:</p>\n                        <p>Wrote pipeline, word cloud, topic modeling, About the Project/About Us Page Content, Video Script</p>\n                    </div>\n                </div>\n\n                <div className=\"one_of_us\">\n                    <h4>Paavo Streibich</h4>\n                    <div className=\"au_item\">\n                        <p>Course of Study:</p>\n                        <p>Computer Science, B.Sc. 100%</p>\n                    </div>\n                    <div className=\"au_item\">\n                        <p>Interests:</p>\n                        <p>Algorithm & Datastructures</p>\n                    </div>\n                    <div className=\"au_item\">\n                        <p>Contributions:</p>\n                        <p>Pipeline assiested, Tests developed, About the Project/ About Us Page Content, Video Script</p>\n                    </div>\n                </div>\n\n                <div className=\"one_of_us\">\n                    <h4>Robin Viellieber</h4>\n                    <div className=\"au_item\">\n                        <p>Course of Study:</p>\n                        <p>Scientific Computing, M.Sc.</p>\n                    </div>\n                    <div className=\"au_item\">\n                        <p>Interests:</p>\n                        <p>Computer Vision, Statistical Learning</p>\n                    </div>\n                    <div className=\"au_item\">\n                        <p>Contributions:</p>\n                        <p>Pipeline assisted, Sentiment Analysis, Website Design, About the Project/ About Us Page Content, Video Script, Video Edit</p>\n                    </div>\n\n                </div>\n            </div>\n            <Botbar />\n        </div>\n    );\n}\n\nexport default AboutUs;","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport LandingPage from './Components/LandingPage';\nimport AboutProject from './Components/AboutProject';\nimport Mobile from './Components/MobileNotifiy';\nimport Contact from './Components/Contact';\nimport Demo from './Components/Demo';\nimport AboutUs from './Components/AboutUs';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Mobile />\n        <Switch>\n          <Route path=\"/\" exact component={LandingPage} />\n          <Route path=\"/aboutproject\" component={AboutProject} />\n          <Route path=\"/aboutus\" component={AboutUs} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/demo\" component={Demo} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}